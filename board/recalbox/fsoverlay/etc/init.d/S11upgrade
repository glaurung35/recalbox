#!/bin/bash

if test "$1" != "start"
then
  exit 0
fi

ARCH=$(cat /recalbox/recalbox.arch)
UPDATEFILE="/boot/update/recalbox-$ARCH.img.xz"
UPDATEFILE_UNCOMPRESSED=${UPDATEFILE::-3}
if [[ -f $UPDATEFILE ]]; then
  recallog -f upgrade.log "upgrade found! moving ${UPDATEFILE} to SHARE as $(basename "${UPDATEFILE_UNCOMPRESSED}")"
  fbv2 -k -i /recalbox/system/resources/offline-install-0.jpg
  unxz -c "${UPDATEFILE}" >"/recalbox/share/system/upgrade/$(basename "$UPDATEFILE_UNCOMPRESSED")"
  mount -o remount,rw /boot
  rm "${UPDATEFILE}"
  mount -o remount,ro /boot
  ( exec /recalbox/scripts/upgrade/recalbox-squashfs-upgrade.sh )
  exit 0
elif [[ -f "/recalbox/share/system/upgrade/$(basename "$UPDATEFILE_UNCOMPRESSED")" ]]; then
  # asynchronously remove uncompressed file
  # this is to avoid a race condition when doing the upgrade:
  # unmounting the image and removing the file that is still locked
  # creates stale unremovable files that occupy space
  rm -f "/recalbox/share/system/upgrade/$(basename "$UPDATEFILE_UNCOMPRESSED")"

  # inform ES we upgraded
  touch /tmp/upgraded
fi
