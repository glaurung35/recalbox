--- a/mupen64plus-core/src/r4300/recomp.c
+++ b/mupen64plus-core/src/r4300/recomp.c
@@ -48,7 +48,7 @@
 #include "ops.h"
 #include "r4300.h"
 #include "r4300_core.h"
-#include "recomp.h"
+//#include "recomp.h"
 #include "recomph.h" //include for function prototypes
 #include "tlb.h"
 
@@ -2226,7 +2226,7 @@
          free(block->riprel_table);
          block->riprel_table = NULL;
       }
-      init_assembler(NULL, 0, NULL, 0);
+//      init_assembler(NULL, 0, NULL, 0);
       init_cache(block->block);
    }
 #endif
@@ -2268,7 +2268,7 @@
          gennotcompiled() and gendebug() is position-independent and contains no jumps . */
       block->code_length = code_length;
       block->max_code_length = max_code_length;
-      free_assembler(&block->jumps_table, &block->jumps_number, &block->riprel_table, &block->riprel_number);
+//      free_assembler(&block->jumps_table, &block->jumps_number, &block->riprel_table, &block->riprel_number);
    }
 #endif
 
@@ -2290,7 +2290,7 @@
          blocks[paddr>>12]->start = paddr & ~UINT32_C(0xFFF);
          blocks[paddr>>12]->end = (paddr & ~UINT32_C(0xFFF)) + UINT32_C(0x1000);
       }
-      init_block(blocks[paddr>>12]);
+//      init_block(blocks[paddr>>12]);
 
       paddr += block->end - block->start - 4;
       invalid_code[paddr>>12] = 0;
@@ -2304,7 +2304,7 @@
          blocks[paddr>>12]->start = paddr & ~UINT32_C(0xFFF);
          blocks[paddr>>12]->end = (paddr & ~UINT32_C(0xFFF)) + UINT32_C(0x1000);
       }
-      init_block(blocks[paddr>>12]);
+//      init_block(blocks[paddr>>12]);
    }
    else
    {
@@ -2322,7 +2322,7 @@
             blocks[alt_addr>>12]->start = alt_addr & ~UINT32_C(0xFFF);
             blocks[alt_addr>>12]->end = (alt_addr & ~UINT32_C(0xFFF)) + UINT32_C(0x1000);
          }
-         init_block(blocks[alt_addr>>12]);
+//         init_block(blocks[alt_addr>>12]);
       }
    }
    timed_section_end(TIMED_SECTION_COMPILER);
@@ -2367,7 +2367,7 @@
       code_length = block->code_length;
       max_code_length = block->max_code_length;
       inst_pointer = &block->code;
-      init_assembler(block->jumps_table, block->jumps_number, block->riprel_table, block->riprel_number);
+//      init_assembler(block->jumps_table, block->jumps_number, block->riprel_table, block->riprel_number);
       init_cache(block->block + (func & 0xFFF) / 4);
    }
 #endif
@@ -2456,10 +2456,10 @@
    if (r4300emu == CORE_DYNAREC)
    {
       free_all_registers();
-      passe2(block->block, (func&0xFFF)/4, i, block);
+//      passe2(block->block, (func&0xFFF)/4, i, block);
       block->code_length = code_length;
       block->max_code_length = max_code_length;
-      free_assembler(&block->jumps_table, &block->jumps_number, &block->riprel_table, &block->riprel_number);
+//      free_assembler(&block->jumps_table, &block->jumps_number, &block->riprel_table, &block->riprel_number);
    }
 #endif
 
