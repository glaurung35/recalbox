--- a/xbmc/windowing/amlogic/WinSystemAmlogic.cpp
+++ b/xbmc/windowing/amlogic/WinSystemAmlogic.cpp
@@ -63,7 +63,7 @@ CWinSystemAmlogic::CWinSystemAmlogic()
   }
 
   m_nativeDisplay = EGL_NO_DISPLAY;
-  m_nativeWindow = nullptr;
+  m_nativeWindow = static_cast<EGLNativeWindowType>(NULL);
 
   m_displayWidth = 0;
   m_displayHeight = 0;
@@ -84,7 +84,7 @@ CWinSystemAmlogic::~CWinSystemAmlogic()
 {
   if(m_nativeWindow)
   {
-    m_nativeWindow = nullptr;
+    m_nativeWindow = static_cast<EGLNativeWindowType>(NULL);
   }
 }
 
@@ -149,10 +149,12 @@ bool CWinSystemAmlogic::CreateNewWindow(const std::string& name,
   m_stereo_mode = stereo_mode;
   m_bFullScreen = fullScreen;
 
+#ifdef _FBDEV_WINDOW_H_
   fbdev_window *nativeWindow = new fbdev_window;
   nativeWindow->width = res.iWidth;
   nativeWindow->height = res.iHeight;
   m_nativeWindow = static_cast<EGLNativeWindowType>(nativeWindow);
+#endif
 
   aml_set_native_resolution(res, m_framebuffer_name, stereo_mode);
 
@@ -171,7 +173,7 @@ bool CWinSystemAmlogic::CreateNewWindow(const std::string& name,
 
 bool CWinSystemAmlogic::DestroyWindow()
 {
-  m_nativeWindow = nullptr;
+  m_nativeWindow = static_cast<EGLNativeWindowType>(NULL);
 
   return true;
 }
--- a/xbmc/windowing/amlogic/WinSystemAmlogic.h
+++ b/xbmc/windowing/amlogic/WinSystemAmlogic.h
@@ -51,7 +51,7 @@ class CWinSystemAmlogic : public CWinSystemBase
 protected:
   std::string m_framebuffer_name;
   EGLDisplay m_nativeDisplay;
-  fbdev_window *m_nativeWindow;
+  EGLNativeWindowType m_nativeWindow;
 
   int m_displayWidth;
   int m_displayHeight;
