--- a/CMakeLists.txt	2018-03-21 03:59:45.000000000 -0400
+++ b/CMakeLists.txt	2018-03-23 19:09:40.515158386 -0400
@@ -1,5 +1,8 @@
 cmake_minimum_required(VERSION 2.8)
 
+option(GLES "Set to ON if targeting OpenGL ES" ${GLES})
+option(GL "Set to ON if targeting Desktop OpenGL" ${GL})
+
 project(emulationstation-all)
 
 #-------------------------------------------------------------------------------
@@ -27,42 +30,32 @@
 
 #-------------------------------------------------------------------------------
 #set up OpenGL system variable
-set(GLSystem "Desktop OpenGL" CACHE STRING "The OpenGL system to be used")
-set_property(CACHE GLSystem PROPERTY STRINGS "Desktop OpenGL" "OpenGL ES")
-
+if(GLES)
+    set(GLSystem "OpenGL ES" CACHE STRING "The OpenGL system to be used")
+elseif(GL)
+    set(GLSystem "Desktop OpenGL" CACHE STRING "The OpenGL system to be used")
 #-------------------------------------------------------------------------------
 #check if we're running on Raspberry Pi
-MESSAGE("Looking for bcm_host.h")
-if(EXISTS "/opt/vc/include/bcm_host.h")
+elseif(EXISTS "${CMAKE_FIND_ROOT_PATH}/opt/vc/include/bcm_host.h")
     MESSAGE("bcm_host.h found")
     set(BCMHOST found)
     set(GLSystem "OpenGL ES")
-else()
-    MESSAGE("bcm_host.h not found")
-endif()
-if(${RPI_VERSION})
-	add_definitions(-DRPI_VERSION=${RPI_VERSION})
-endif()
-
 #-------------------------------------------------------------------------------
 #check if we're running on olinuxino
-MESSAGE("Looking for libMali.so")
-if(EXISTS "/usr/lib/libMali.so")
+elseif(EXISTS "${CMAKE_FIND_ROOT_PATH}/usr/lib/libMali.so")
     MESSAGE("libMali.so found")
     set(GLSystem "OpenGL ES")
-else()
-    MESSAGE("libMali.so not found")
-endif()
-
 # on some drivers (the one for xu4 for example), the libmali is lowercase
-MESSAGE("Looking for libmali.so")
-if(EXISTS "/usr/lib/libmali.so")
+elseif(EXISTS "${CMAKE_FIND_ROOT_PATH}/usr/lib/libmali.so")
     MESSAGE("libmali.so found")
     set(GLSystem "OpenGL ES")
-else()
-    MESSAGE("libmali.so not found")
 endif()
 
+if(${RPI_VERSION})
+	add_definitions(-DRPI_VERSION=${RPI_VERSION})
+endif()
+
#+set_property(CACHE GLSystem PROPERTY STRINGS "Desktop OpenGL" "OpenGL ES")
+
 #finding necessary packages
 #-------------------------------------------------------------------------------
 if(${GLSystem} MATCHES "Desktop OpenGL")
