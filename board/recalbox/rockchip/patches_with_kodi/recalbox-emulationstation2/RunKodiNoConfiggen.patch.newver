For some reason ES doesn't release all the necessary graphics resources to run KODI, so instead of using configgen we are just going to close ES and let KODI run. An autoexec.py program has been written to handle the switch between the two automatically.
--- a/es-app/src/recalbox/RecalboxSystem.cpp	2018-03-21 03:59:45.000000000 -0400
+++ b/es-app/src/recalbox/RecalboxSystem.cpp	2018-04-16 17:37:25.395228501 -0400
@@ -219,8 +219,9 @@
     AudioManager::getInstance()->deinit();
     VolumeControl::getInstance()->deinit();
 
-    std::string commandline = InputManager::getInstance()->configureEmulators();
-    std::string command = "configgen -system kodi -rom '' " + commandline;
+    // std::string commandline = InputManager::getInstance()->configureEmulators();
+    // std::string command = "configgen -system kodi -rom '' " + commandline;
+    std::string command = "/recalbox/scripts/ExitES.sh";
 
     window->deinit();
 
Disable the auto-kodi launch in ES because it's being handled by the autoexec file instead
--- a/es-app/src/main.cpp	2018-03-21 03:59:45.000000000 -0400
+++ b/es-app/src/main.cpp	2018-04-21 19:28:41.735655905 -0400
@@ -359,10 +359,10 @@
   }
 
   RecalboxConf* recalboxConf = RecalboxConf::getInstance();
-  if (recalboxConf->get("kodi.enabled") == "1" && recalboxConf->get("kodi.atstartup") == "1")
-  {
-    RecalboxSystem::getInstance()->launchKodi(&window);
-  }
+//  if (recalboxConf->get("kodi.enabled") == "1" && recalboxConf->get("kodi.atstartup") == "1")
+//  {
+//    RecalboxSystem::getInstance()->launchKodi(&window);
+//  }
   RecalboxSystem::getInstance()->getIpAdress();
   // UPDATED VERSION MESSAGE
   std::string changelog = RecalboxUpgrade::getInstance()->getChangelog();
