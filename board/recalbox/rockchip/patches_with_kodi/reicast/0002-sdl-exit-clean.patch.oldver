--- a/core/sdl/sdl.h	2018-06-13 12:53:12.000000000 -0400
+++ b/core/sdl/sdl.h	2018-06-15 10:46:03.353682052 -0400
@@ -5,3 +5,5 @@
 extern void input_sdl_handle(u32 port);
 extern void sdl_window_create();
 extern void sdl_window_set_text(const char* text);
+
+void gl_term();
--- a/core/sdl/sdl.cpp	2018-04-21 18:17:01.000000000 -0400
+++ b/core/sdl/sdl.cpp	2018-06-13 20:01:10.771997223 -0400
@@ -118,6 +118,26 @@
 	SDL_SetRelativeMouseMode(SDL_TRUE);
 }
 
+void gl_term()
+{
+	if (window != NULL) {
+		SDL_GL_MakeCurrent(window, NULL);
+		SDL_GL_SwapWindow(window);
+	}
+
+	if (glcontext != NULL) {
+		SDL_GL_DeleteContext(glcontext);
+		glcontext = NULL;
+	}
+
+	if (window != NULL) {
+		SDL_DestroyWindow(window);
+		window = NULL;
+	}
+
+	SDL_Quit();
+}
+
 void input_sdl_handle(u32 port)
 {
 	static int keys[13];
@@ -374,6 +385,7 @@
 	if (keys[12]){ kcode[port] &= ~DC_BTN_START; }
 	if (keys[9])
 	{ 
+		gl_term();
 		dc_term();
 	
 		// is there a proper way to exit? dc_term() doesn't end the dc_run() loop it seems
@@ -481,8 +493,3 @@
 		screen_height = new_height;
 	}
 }
-
-void gl_term()
-{
-	SDL_GL_DeleteContext(glcontext);
-}
--- a/core/linux-dist/evdev.cpp	2018-06-13 12:53:12.000000000 -0400
+++ b/core/linux-dist/evdev.cpp	2018-06-15 10:47:16.361682052 -0400
@@ -4,6 +4,7 @@
 #include "linux-dist/evdev.h"
 #include "linux-dist/main.h"
 #include "cfg/ini.h"
+#include "sdl/sdl.h"
 #include <vector>
 #include <map>
 #include <dlfcn.h>
@@ -331,7 +332,8 @@
 					} else if (ie.code == controller->mapping->Btn_Start) {
 						SET_FLAG(kcode[port], DC_BTN_START, ie.value);
 					} else if (ie.code == controller->mapping->Btn_Escape) {
+						gl_term();
						dc_term();
 						die("death by escape key");
 					} else if (ie.code == controller->mapping->Btn_DPad_Left) {
 						SET_FLAG(kcode[port], DC_DPAD_LEFT, ie.value);
--- a/core/linux/common.cpp	2018-06-13 12:53:12.000000000 -0400
+++ b/core/linux/common.cpp	2018-06-15 11:36:38.677682052 -0400
@@ -29,6 +29,8 @@
 
 #include "hw/sh4/dyna/ngen.h"
 
+#include "sdl/sdl.h"
+
 #if !defined(TARGET_NO_EXCEPTIONS)
 bool ngen_Rewrite(unat& addr,unat retadr,unat acc);
 u32* ngen_readm_fail_v2(u32* ptr,u32* regs,u32 saddr);
@@ -96,6 +98,7 @@
 	else
 	{
 		printf("SIGSEGV @ %p (fault_handler+0x%p) ... %p -> was not in vram\n", ctx.pc, ctx.pc - (unat)fault_handler, si->si_addr);
+		gl_term();
 		die("segfault");
 		signal(SIGSEGV, SIG_DFL);
 	}
