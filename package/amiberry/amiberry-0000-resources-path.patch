diff --git a/src/driveclick.cpp b/src/driveclick.cpp
index 56b908ed..82b88710 100644
--- a/src/driveclick.cpp
+++ b/src/driveclick.cpp
@@ -542,19 +542,19 @@ int driveclick_loadresource(struct drvsample* sp, int drivetype)
 		auto* s = sp + type;
 		switch (type) {
 		case 0:
-			sample = strdup("data/floppy_sounds/drive_click.wav");
+			sample = strdup("/usr/share/amiberry/data/floppy_sounds/drive_click.wav");
 			break;
 		case 1:
-			sample = strdup("data/floppy_sounds/drive_spin.wav");
+			sample = strdup("/usr/share/amiberry/data/floppy_sounds/drive_spin.wav");
 			break;
 		case 2:
-			sample = strdup("data/floppy_sounds/drive_spinnd.wav");
+			sample = strdup("/usr/share/amiberry/data/floppy_sounds/drive_spinnd.wav");
 			break;
 		case 3:
-			sample = strdup("data/floppy_sounds/drive_startup.wav");
+			sample = strdup("/usr/share/amiberry/data/floppy_sounds/drive_startup.wav");
 			break;
 		case 4:
-			sample = strdup("data/floppy_sounds/drive_snatch.wav");
+			sample = strdup("/usr/share/amiberry/data/floppy_sounds/drive_snatch.wav");
 			break;
 		default:
 			continue;
diff --git a/src/osdep/amiberry_gfx.cpp b/src/osdep/amiberry_gfx.cpp
index 1bb5f0fe..8bd8698c 100644
--- a/src/osdep/amiberry_gfx.cpp
+++ b/src/osdep/amiberry_gfx.cpp
@@ -1857,7 +1857,7 @@ int graphics_init(bool mousecapture)
 		}
 		check_error_sdl(mon->sdl_window == nullptr, "Unable to create window:");
 
-		auto* const icon_surface = IMG_Load("data/amiberry.png");
+		auto* const icon_surface = IMG_Load("/usr/share/amiberry/data/amiberry.png");
 		if (icon_surface != nullptr)
 		{
 			SDL_SetWindowIcon(mon->sdl_window, icon_surface);
diff --git a/src/osdep/gui/PanelAbout.cpp b/src/osdep/gui/PanelAbout.cpp
index 7cccf723..2a59d0b1 100644
--- a/src/osdep/gui/PanelAbout.cpp
+++ b/src/osdep/gui/PanelAbout.cpp
@@ -23,7 +23,7 @@ void InitPanelAbout(const struct _ConfigCategory& category)
 	SDL_VERSION(&compiled);
 	SDL_GetVersion(&linked);
 	
-	amiberryLogoImage = gcn::Image::load(prefix_with_application_directory_path("data/amiberry-logo.png"));
+	amiberryLogoImage = gcn::Image::load(prefix_with_application_directory_path("/usr/share/amiberry/data/amiberry-logo.png"));
 	icon = new gcn::Icon(amiberryLogoImage);
 	lblEmulatorVersion = new gcn::Label(get_version_string());
 	std::ostringstream sdl_compiled;
diff --git a/src/osdep/gui/PanelHD.cpp b/src/osdep/gui/PanelHD.cpp
index a9d68f05..66febcc6 100644
--- a/src/osdep/gui/PanelHD.cpp
+++ b/src/osdep/gui/PanelHD.cpp
@@ -376,7 +376,7 @@ void InitPanelHD(const struct _ConfigCategory& category)
 		listCmdProps[row]->setId(tmp);
 		listCmdProps[row]->addActionListener(hdEditActionListener);
 
-		listCmdDelete[row] = new gcn::ImageButton(prefix_with_application_directory_path("data/delete.png"));
+		listCmdDelete[row] = new gcn::ImageButton(prefix_with_application_directory_path("/usr/share/amiberry/data/delete.png"));
 		listCmdDelete[row]->setBaseColor(gui_baseCol);
 		listCmdDelete[row]->setSize(SMALL_BUTTON_HEIGHT, SMALL_BUTTON_HEIGHT);
 		snprintf(tmp, 20, "cmdDel%d", row);
diff --git a/src/osdep/gui/PanelMisc.cpp b/src/osdep/gui/PanelMisc.cpp
index 685919cd..0bb4763a 100644
--- a/src/osdep/gui/PanelMisc.cpp
+++ b/src/osdep/gui/PanelMisc.cpp
@@ -461,7 +461,7 @@ void InitPanelMisc(const struct _ConfigCategory& category)
 	cmdKeyOpenGUI->setSize(SMALL_BUTTON_WIDTH, SMALL_BUTTON_HEIGHT);
 	cmdKeyOpenGUI->setBaseColor(gui_baseCol);
 	cmdKeyOpenGUI->addActionListener(miscActionListener);
-	cmdKeyOpenGUIClear = new gcn::ImageButton(prefix_with_application_directory_path("data/delete.png"));
+	cmdKeyOpenGUIClear = new gcn::ImageButton(prefix_with_application_directory_path("/usr/share/amiberry/data/delete.png"));
 	cmdKeyOpenGUIClear->setBaseColor(gui_baseCol);
 	cmdKeyOpenGUIClear->setSize(SMALL_BUTTON_WIDTH, SMALL_BUTTON_HEIGHT);
 	cmdKeyOpenGUIClear->setId("cmdKeyOpenGUIClear");
@@ -478,7 +478,7 @@ void InitPanelMisc(const struct _ConfigCategory& category)
 	cmdKeyForQuit->setSize(SMALL_BUTTON_WIDTH, SMALL_BUTTON_HEIGHT);
 	cmdKeyForQuit->setBaseColor(gui_baseCol);
 	cmdKeyForQuit->addActionListener(miscActionListener);
-	cmdKeyForQuitClear = new gcn::ImageButton(prefix_with_application_directory_path("data/delete.png"));
+	cmdKeyForQuitClear = new gcn::ImageButton(prefix_with_application_directory_path("/usr/share/amiberry/data/delete.png"));
 	cmdKeyForQuitClear->setBaseColor(gui_baseCol);
 	cmdKeyForQuitClear->setSize(SMALL_BUTTON_WIDTH, SMALL_BUTTON_HEIGHT);
 	cmdKeyForQuitClear->setId("cmdKeyForQuitClear");
@@ -495,7 +495,7 @@ void InitPanelMisc(const struct _ConfigCategory& category)
 	cmdKeyActionReplay->setSize(SMALL_BUTTON_WIDTH, SMALL_BUTTON_HEIGHT);
 	cmdKeyActionReplay->setBaseColor(gui_baseCol);
 	cmdKeyActionReplay->addActionListener(miscActionListener);
-	cmdKeyActionReplayClear = new gcn::ImageButton(prefix_with_application_directory_path("data/delete.png"));
+	cmdKeyActionReplayClear = new gcn::ImageButton(prefix_with_application_directory_path("/usr/share/amiberry/data/delete.png"));
 	cmdKeyActionReplayClear->setBaseColor(gui_baseCol);
 	cmdKeyActionReplayClear->setSize(SMALL_BUTTON_WIDTH, SMALL_BUTTON_HEIGHT);
 	cmdKeyActionReplayClear->setId("cmdKeyActionReplayClear");
@@ -512,7 +512,7 @@ void InitPanelMisc(const struct _ConfigCategory& category)
 	cmdKeyFullScreen->setSize(SMALL_BUTTON_WIDTH, SMALL_BUTTON_HEIGHT);
 	cmdKeyFullScreen->setBaseColor(gui_baseCol);
 	cmdKeyFullScreen->addActionListener(miscActionListener);
-	cmdKeyFullScreenClear = new gcn::ImageButton(prefix_with_application_directory_path("data/delete.png"));
+	cmdKeyFullScreenClear = new gcn::ImageButton(prefix_with_application_directory_path("/usr/share/amiberry/data/delete.png"));
 	cmdKeyFullScreenClear->setBaseColor(gui_baseCol);
 	cmdKeyFullScreenClear->setSize(SMALL_BUTTON_WIDTH, SMALL_BUTTON_HEIGHT);
 	cmdKeyFullScreenClear->setId("cmdKeyFullScreenClear");
@@ -529,7 +529,7 @@ void InitPanelMisc(const struct _ConfigCategory& category)
 	cmdKeyMinimize->setSize(SMALL_BUTTON_WIDTH, SMALL_BUTTON_HEIGHT);
 	cmdKeyMinimize->setBaseColor(gui_baseCol);
 	cmdKeyMinimize->addActionListener(miscActionListener);
-	cmdKeyMinimizeClear = new gcn::ImageButton(prefix_with_application_directory_path("data/delete.png"));
+	cmdKeyMinimizeClear = new gcn::ImageButton(prefix_with_application_directory_path("/usr/share/amiberry/data/delete.png"));
 	cmdKeyMinimizeClear->setBaseColor(gui_baseCol);
 	cmdKeyMinimizeClear->setSize(SMALL_BUTTON_WIDTH, SMALL_BUTTON_HEIGHT);
 	cmdKeyMinimizeClear->setId("cmdKeyMinimizeClear");
diff --git a/src/osdep/gui/ShowMessage.cpp b/src/osdep/gui/ShowMessage.cpp
index 49f0f3cc..71bb902d 100644
--- a/src/osdep/gui/ShowMessage.cpp
+++ b/src/osdep/gui/ShowMessage.cpp
@@ -147,7 +147,7 @@ static void InitShowMessage()
 	if (gui_font == nullptr)
 	{
 		TTF_Init();
-		gui_font = new gcn::SDLTrueTypeFont(prefix_with_application_directory_path("data/AmigaTopaz.ttf"), 15);
+		gui_font = new gcn::SDLTrueTypeFont(prefix_with_application_directory_path("/usr/share/amiberry/data/AmigaTopaz.ttf"), 15);
 		gcn::Widget::setGlobalFont(gui_font);
 		gui_font->setAntiAlias(false);
 	}
diff --git a/src/osdep/gui/main_window.cpp b/src/osdep/gui/main_window.cpp
index c3ef5e85..8b391966 100644
--- a/src/osdep/gui/main_window.cpp
+++ b/src/osdep/gui/main_window.cpp
@@ -46,45 +46,45 @@ void target_startup_msg(const TCHAR* title, const TCHAR* msg)
 }
 
 ConfigCategory categories[] = {
-	{"About", "data/amigainfo.ico", nullptr, nullptr, InitPanelAbout, ExitPanelAbout, RefreshPanelAbout,
+	{"About", "/usr/share/amiberry/data/amigainfo.ico", nullptr, nullptr, InitPanelAbout, ExitPanelAbout, RefreshPanelAbout,
 		HelpPanelAbout
 	},
-	{"Paths", "data/paths.ico", nullptr, nullptr, InitPanelPaths, ExitPanelPaths, RefreshPanelPaths, HelpPanelPaths},
-	{"Quickstart", "data/quickstart.ico", nullptr, nullptr, InitPanelQuickstart, ExitPanelQuickstart,
+	{"Paths", "/usr/share/amiberry/data/paths.ico", nullptr, nullptr, InitPanelPaths, ExitPanelPaths, RefreshPanelPaths, HelpPanelPaths},
+	{"Quickstart", "/usr/share/amiberry/data/quickstart.ico", nullptr, nullptr, InitPanelQuickstart, ExitPanelQuickstart,
 		RefreshPanelQuickstart, HelpPanelQuickstart
 	},
-	{"Configurations", "data/file.ico", nullptr, nullptr, InitPanelConfig, ExitPanelConfig, RefreshPanelConfig,
+	{"Configurations", "/usr/share/amiberry/data/file.ico", nullptr, nullptr, InitPanelConfig, ExitPanelConfig, RefreshPanelConfig,
 		HelpPanelConfig
 	},
-	{"CPU and FPU", "data/cpu.ico", nullptr, nullptr, InitPanelCPU, ExitPanelCPU, RefreshPanelCPU, HelpPanelCPU},
-	{"Chipset", "data/cpu.ico", nullptr, nullptr, InitPanelChipset, ExitPanelChipset, RefreshPanelChipset,
+	{"CPU and FPU", "/usr/share/amiberry/data/cpu.ico", nullptr, nullptr, InitPanelCPU, ExitPanelCPU, RefreshPanelCPU, HelpPanelCPU},
+	{"Chipset", "/usr/share/amiberry/data/cpu.ico", nullptr, nullptr, InitPanelChipset, ExitPanelChipset, RefreshPanelChipset,
 		HelpPanelChipset
 	},
-	{"ROM", "data/chip.ico", nullptr, nullptr, InitPanelROM, ExitPanelROM, RefreshPanelROM, HelpPanelROM},
-	{"RAM", "data/chip.ico", nullptr, nullptr, InitPanelRAM, ExitPanelRAM, RefreshPanelRAM, HelpPanelRAM},
-	{"Floppy drives", "data/35floppy.ico", nullptr, nullptr, InitPanelFloppy, ExitPanelFloppy, RefreshPanelFloppy,
+	{"ROM", "/usr/share/amiberry/data/chip.ico", nullptr, nullptr, InitPanelROM, ExitPanelROM, RefreshPanelROM, HelpPanelROM},
+	{"RAM", "/usr/share/amiberry/data/chip.ico", nullptr, nullptr, InitPanelRAM, ExitPanelRAM, RefreshPanelRAM, HelpPanelRAM},
+	{"Floppy drives", "/usr/share/amiberry/data/35floppy.ico", nullptr, nullptr, InitPanelFloppy, ExitPanelFloppy, RefreshPanelFloppy,
 		HelpPanelFloppy
 	},
-	{"Hard drives/CD", "data/drive.ico", nullptr, nullptr, InitPanelHD, ExitPanelHD, RefreshPanelHD, HelpPanelHD},
-	{"RTG board", "data/expansion.ico", nullptr, nullptr, InitPanelRTG, ExitPanelRTG,
+	{"Hard drives/CD", "/usr/share/amiberry/data/drive.ico", nullptr, nullptr, InitPanelHD, ExitPanelHD, RefreshPanelHD, HelpPanelHD},
+	{"RTG board", "/usr/share/amiberry/data/expansion.ico", nullptr, nullptr, InitPanelRTG, ExitPanelRTG,
 		RefreshPanelRTG, HelpPanelRTG
 	},
-	{"Hardware info", "data/expansion.ico", nullptr, nullptr, InitPanelHWInfo, ExitPanelHWInfo, RefreshPanelHWInfo, HelpPanelHWInfo},
-	{"Display", "data/screen.ico", nullptr, nullptr, InitPanelDisplay, ExitPanelDisplay, RefreshPanelDisplay,
+	{"Hardware info", "/usr/share/amiberry/data/expansion.ico", nullptr, nullptr, InitPanelHWInfo, ExitPanelHWInfo, RefreshPanelHWInfo, HelpPanelHWInfo},
+	{"Display", "/usr/share/amiberry/data/screen.ico", nullptr, nullptr, InitPanelDisplay, ExitPanelDisplay, RefreshPanelDisplay,
 		HelpPanelDisplay
 	},
-	{"Sound", "data/sound.ico", nullptr, nullptr, InitPanelSound, ExitPanelSound, RefreshPanelSound, HelpPanelSound},
-	{"Input", "data/joystick.ico", nullptr, nullptr, InitPanelInput, ExitPanelInput, RefreshPanelInput, HelpPanelInput},
-	{"Custom controls", "data/controller.png", nullptr, nullptr, InitPanelCustom, ExitPanelCustom,
+	{"Sound", "/usr/share/amiberry/data/sound.ico", nullptr, nullptr, InitPanelSound, ExitPanelSound, RefreshPanelSound, HelpPanelSound},
+	{"Input", "/usr/share/amiberry/data/joystick.ico", nullptr, nullptr, InitPanelInput, ExitPanelInput, RefreshPanelInput, HelpPanelInput},
+	{"Custom controls", "/usr/share/amiberry/data/controller.png", nullptr, nullptr, InitPanelCustom, ExitPanelCustom,
 		RefreshPanelCustom, HelpPanelCustom
 	},
-	{"Miscellaneous", "data/misc.ico", nullptr, nullptr, InitPanelMisc, ExitPanelMisc, RefreshPanelMisc, HelpPanelMisc},
-	{ "Priority", "data/misc.ico", nullptr, nullptr, InitPanelPrio, ExitPanelPrio, RefreshPanelPrio, HelpPanelPrio},
-	{"Savestates", "data/savestate.png", nullptr, nullptr, InitPanelSavestate, ExitPanelSavestate,
+	{"Miscellaneous", "/usr/share/amiberry/data/misc.ico", nullptr, nullptr, InitPanelMisc, ExitPanelMisc, RefreshPanelMisc, HelpPanelMisc},
+	{ "Priority", "/usr/share/amiberry/data/misc.ico", nullptr, nullptr, InitPanelPrio, ExitPanelPrio, RefreshPanelPrio, HelpPanelPrio},
+	{"Savestates", "/usr/share/amiberry/data/savestate.png", nullptr, nullptr, InitPanelSavestate, ExitPanelSavestate,
 		RefreshPanelSavestate, HelpPanelSavestate
 	},
 #ifdef ANDROID
-	{ "OnScreen",         "data/screen.ico",    NULL, NULL, InitPanelOnScreen,  ExitPanelOnScreen, RefreshPanelOnScreen,  HelpPanelOnScreen },
+	{ "OnScreen",         "/usr/share/amiberry/data/screen.ico",    NULL, NULL, InitPanelOnScreen,  ExitPanelOnScreen, RefreshPanelOnScreen,  HelpPanelOnScreen },
 #endif
 	{nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr}
 };
@@ -259,7 +259,7 @@ void update_gui_screen()
 #else
 void setup_cursor()
 {
-	cursor_surface = SDL_LoadBMP(prefix_with_application_directory_path("data/cursor.bmp").c_str());
+	cursor_surface = SDL_LoadBMP(prefix_with_application_directory_path("/usr/share/amiberry/data/cursor.bmp").c_str());
 	if (!cursor_surface)
 	{
 		// Load failed. Log error.
@@ -423,7 +423,7 @@ void amiberry_gui_init()
 			GUI_HEIGHT,
 			flags);
 
-		auto* const icon_surface = IMG_Load("data/amiberry.png");
+		auto* const icon_surface = IMG_Load("/usr/share/amiberry/data/amiberry.png");
 		if (icon_surface != nullptr)
 		{
 			SDL_SetWindowIcon(mon->sdl_window, icon_surface);
@@ -1040,7 +1040,7 @@ void gui_widgets_init()
 
 	try
 	{
-		gui_font = new gcn::SDLTrueTypeFont(prefix_with_application_directory_path("data/AmigaTopaz.ttf"), 15);
+		gui_font = new gcn::SDLTrueTypeFont(prefix_with_application_directory_path("/usr/share/amiberry/data/AmigaTopaz.ttf"), 15);
 	}
 	catch (const std::exception& ex)
 	{
