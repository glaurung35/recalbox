diff --git a/src/vm/scv/vdp.cpp b/src/vm/scv/vdp.cpp
index 3ca671a..093401c 100755
--- a/src/vm/scv/vdp.cpp
+++ b/src/vm/scv/vdp.cpp
@@ -192,24 +192,27 @@ inline void VDP::draw_text(int dx, int dy, uint8_t data, uint8_t tcol, uint8_t b
 	int dx8 = (dx << 3)+2;
 	int dy16 = dy << 4;
 
-	for(int l = 0; l < 8 && data; l++)
+	unsigned char* f = font[data];
+	unsigned char* p = (unsigned char*)&text[dy16][dx8];
+	unsigned int c = (tcol << 8) + bcol;
+	if (data)
+	  for(int l = 8; --l >= 0; f++, p += 320)
 	{
-		uint8_t* dest = &text[dy16 + l][dx8];
-		uint8_t pat = font[data][l];
-
-		dest[0] = (pat & 0x80) ? tcol : bcol;
-		dest[1] = (pat & 0x40) ? tcol : bcol;
-		dest[2] = (pat & 0x20) ? tcol : bcol;
-		dest[3] = (pat & 0x10) ? tcol : bcol;
-		dest[4] = (pat & 0x08) ? tcol : bcol;
-		dest[5] = (pat & 0x04) ? tcol : bcol;
-		dest[6] = (pat & 0x02) ? tcol : bcol;
-		dest[7] = (pat & 0x01) ? tcol : bcol;
-	}
-	for(int l = (data ? 8 : 0); l < 16; l++)
-	{
-		memset(&text[dy16 + l][dx8], bcol, 8);
-	}
+	    unsigned int = *f;
+      dest[0] = (unsigned char)(c >> ((pat >> (7 - 3)) & 8));
+      dest[1] = (unsigned char)(c >> ((pat >> (6 - 3)) & 8));
+      dest[2] = (unsigned char)(c >> ((pat >> (5 - 3)) & 8));
+      dest[3] = (unsigned char)(c >> ((pat >> (4 - 3)) & 8));
+      dest[4] = (unsigned char)(c >> ((pat >> (3 - 3)) & 8));
+      dest[5] = (unsigned char)(c >> ((pat << (3 - 2)) & 8));
+      dest[6] = (unsigned char)(c >> ((pat << (3 - 1)) & 8));
+      dest[7] = (unsigned char)(c >> ((pat << (3 - 0)) & 8));
+    }
+
+  unsigned int* p = (unsigned int*)&text[dy16 + ((data != 0) ? 8 : 0)][dx8];
+  c = cu + (cu << 8); c = c + (c << 16);
+	for(int l = (data ? 8 : 16); --l >= 0; p += 320 >> 2)
+	  p[0] = p[1] = c;
 }
 
 inline void VDP::draw_block(int dx, int dy, uint8_t data)
