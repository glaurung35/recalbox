diff --git a/src/vm/scv/vdp.cpp b/src/vm/scv/vdp.cpp
index dc2c6fe..a3141f2 100755
--- a/src/vm/scv/vdp.cpp
+++ b/src/vm/scv/vdp.cpp
@@ -183,18 +183,18 @@ inline void VDP::draw_text(int dx, int dy, uint8_t data, uint8_t tcol, uint8_t b
 	  for(int l = 8; --l >= 0; f++, p += 320)
     {
 	    unsigned int pat = *f;
-      dest[0] = (unsigned char)(c >> ((pat >> (7 - 3)) & 8));
-      dest[1] = (unsigned char)(c >> ((pat >> (6 - 3)) & 8));
-      dest[2] = (unsigned char)(c >> ((pat >> (5 - 3)) & 8));
-      dest[3] = (unsigned char)(c >> ((pat >> (4 - 3)) & 8));
-      dest[4] = (unsigned char)(c >> ((pat >> (3 - 3)) & 8));
-      dest[5] = (unsigned char)(c >> ((pat << (3 - 2)) & 8));
-      dest[6] = (unsigned char)(c >> ((pat << (3 - 1)) & 8));
-      dest[7] = (unsigned char)(c >> ((pat << (3 - 0)) & 8));
+      p[0] = (unsigned char)(c >> ((pat >> (7 - 3)) & 8));
+      p[1] = (unsigned char)(c >> ((pat >> (6 - 3)) & 8));
+      p[2] = (unsigned char)(c >> ((pat >> (5 - 3)) & 8));
+      p[3] = (unsigned char)(c >> ((pat >> (4 - 3)) & 8));
+      p[4] = (unsigned char)(c >> ((pat >> (3 - 3)) & 8));
+      p[5] = (unsigned char)(c >> ((pat << (3 - 2)) & 8));
+      p[6] = (unsigned char)(c >> ((pat << (3 - 1)) & 8));
+      p[7] = (unsigned char)(c >> ((pat << (3 - 0)) & 8));
     }
 
   unsigned int* p = (unsigned int*)&text[dy16 + ((data != 0) ? 8 : 0)][dx8];
-  c = cu + (cu << 8); c = c + (c << 16);
+  c = bcol + ((uint32_t )bcol << 8); c = c + (c << 16);
 	for(int l = (data ? 8 : 16); --l >= 0; p += 320 >> 2)
 	  p[0] = p[1] = c;
 }
