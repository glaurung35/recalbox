################################################################################
#
# MUPEN64PLUS_NEXT
#
################################################################################
LIBRETRO_MUPEN64PLUS_NEXT_VERSION = cdf7bb989cf412341eb40df77da0bcd42309f737
LIBRETRO_MUPEN64PLUS_NEXT_SITE = $(call github,libretro,mupen64plus-libretro-nx,$(LIBRETRO_MUPEN64PLUS_NEXT_VERSION))
LIBRETRO_MUPEN64PLUS_NEXT_LICENSE = GPLv3

ifeq ($(BR2_PACKAGE_RPI_USERLAND),y)
	LIBRETRO_MUPEN64PLUS_NEXT_DEPENDENCIES += rpi-userland
endif

ifeq ($(BR2_PACKAGE_MESA3D),y)
LIBRETRO_MUPEN64PLUS_NEXT_DEPENDENCIES += mesa3d
endif

ifeq ($(BR2_i386)$(BR2_x86_64),y)
LIBRETRO_MUPEN64PLUS_NEXT_DEPENDENCIES += host-nasm
endif

LIBRETRO_MUPEN64PLUS_NEXT_SUPP_OPT=

ifeq ($(BR2_PACKAGE_RECALBOX_TARGET_RPI3),y)
	LIBRETRO_MUPEN64PLUS_NEXT_SUPP_OPT=FORCE_GLES=1 ARCH=arm
	LIBRETRO_MUPEN64PLUS_NEXT_PLATFORM=rpi3
else ifeq ($(BR2_PACKAGE_RECALBOX_TARGET_RPI2),y)
	LIBRETRO_MUPEN64PLUS_NEXT_SUPP_OPT=FORCE_GLES=1 ARCH=arm
	LIBRETRO_MUPEN64PLUS_NEXT_PLATFORM=rpi2
else ifeq ($(BR2_PACKAGE_RECALBOX_TARGET_XU4),y)
	LIBRETRO_MUPEN64PLUS_NEXT_SUPP_OPT=FORCE_GLES=1 ARCH=aarch64
	LIBRETRO_MUPEN64PLUS_NEXT_PLATFORM=odroid
else ifeq ($(BR2_PACKAGE_RECALBOX_TARGET_C2),y)
	LIBRETRO_MUPEN64PLUS_NEXT_SUPP_OPT=FORCE_GLES=1 ARCH=aarch64
	LIBRETRO_MUPEN64PLUS_NEXT_PLATFORM=linux
else ifeq ($(BR2_i386),y)
	# LIBRETRO_MUPEN64PLUS_NEXT_SUPP_OPT=ARCH=i686 # Keep it for when dynarec works
	LIBRETRO_MUPEN64PLUS_NEXT_SUPP_OPT=ARCH=i586
	LIBRETRO_MUPEN64PLUS_NEXT_PLATFORM=linux
else ifeq ($(BR2_x86_64),y)
	# LIBRETRO_MUPEN64PLUS_NEXT_SUPP_OPT="ARCH=i686 x86_64" #keep it for when dynarec works
	LIBRETRO_MUPEN64PLUS_NEXT_SUPP_OPT="ARCH=i586"
	LIBRETRO_MUPEN64PLUS_NEXT_PLATFORM=linux
else
	LIBRETRO_MUPEN64PLUS_NEXT_PLATFORM=$(LIBRETRO_PLATFORM)
endif

define LIBRETRO_MUPEN64PLUS_NEXT_BUILD_CMDS
	# CFLAGS="$(TARGET_CFLAGS)" CXXFLAGS="$(TARGET_CXXFLAGS)" $(MAKE) NASM="$(HOST_DIR)/bin/nasm)" CXX="$(TARGET_CXX)" CC="$(TARGET_CC)" -C $(@D)/ -f Makefile platform="$(LIBRETRO_MUPEN64PLUS_NEXT_PLATFORM)" $(LIBRETRO_MUPEN64PLUS_NEXT_SUPP_OPT) # Keep it for when dynarec works
	CFLAGS="$(TARGET_CFLAGS)" CXXFLAGS="$(TARGET_CXXFLAGS)" $(MAKE) CXX="$(TARGET_CXX)" CC="$(TARGET_CC)" -C $(@D)/ -f Makefile platform="$(LIBRETRO_MUPEN64PLUS_NEXT_PLATFORM)" $(LIBRETRO_MUPEN64PLUS_NEXT_SUPP_OPT)
endef

define LIBRETRO_MUPEN64PLUS_NEXT_INSTALL_TARGET_CMDS
	$(INSTALL) -D $(@D)/mupen64plus_next_libretro.so \
		$(TARGET_DIR)/usr/lib/libretro/mupen64plus_next_libretro.so
endef

define MUPEN64PLUS_NEXT_CROSS_FIXUP
	$(SED) 's|/opt/vc/include|$(STAGING_DIR)/usr/include|g' $(@D)/Makefile
	$(SED) 's|/opt/vc/lib|$(STAGING_DIR)/usr/lib|g' $(@D)/Makefile
endef

MUPEN64PLUS_NEXT_PRE_CONFIGURE_HOOKS += MUPEN64PLUS_NEXT

$(eval $(generic-package))
