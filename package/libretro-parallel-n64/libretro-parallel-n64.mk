################################################################################
#
# PARALLEL-N64
#
################################################################################

LIBRETRO_PARALLEL_N64_VERSION = 54681c22f754695dea02dcf9f6974f68d25604fe
LIBRETRO_PARALLEL_N64_SITE = $(call github,libretro,parallel-n64,$(LIBRETRO_PARALLEL_N64_VERSION))

ifeq ($(BR2_PACKAGE_RPI_USERLAND),y)
LIBRETRO_PARALLEL_N64_DEPENDENCIES += rpi-userland
endif

ifeq ($(BR2_PACKAGE_MESA3D),y)
LIBRETRO_PARALLEL_N64_DEPENDENCIES += mesa3d
endif

ifeq ($(BR2_i386)$(BR2_x86_64),y)
LIBRETRO_PARALLEL_N64_DEPENDENCIES += host-nasm
endif

# LTO switched off on PC platforms
LIBRETRO_PARALLEL_N64_CFLAGS = $(COMPILER_COMMONS_CFLAGS_SO)
LIBRETRO_PARALLEL_N64_CXXFLAGS = $(COMPILER_COMMONS_CXXFLAGS_SO)
LIBRETRO_PARALLEL_N64_LDFLAGS = $(COMPILER_COMMONS_LDFLAGS_SO)

# Platform dependent options
LIBRETRO_PARALLEL_N64_SUPP_OPT=
ifeq ($(BR2_PACKAGE_RECALBOX_TARGET_RPI3),y)
LIBRETRO_PARALLEL_N64_FIX_FLAGS=-DARM_FIX=1
LIBRETRO_PARALLEL_N64_SUPP_OPT=FORCE_GLES=1 ARCH=arm
LIBRETRO_PARALLEL_N64_PLATFORM=rpi3
LIBRETRO_PARALLEL_N64_DYNAREC=arm
else ifeq ($(BR2_PACKAGE_RECALBOX_TARGET_RPI2),y)
LIBRETRO_PARALLEL_N64_FIX_FLAGS=-DARM_FIX=1
LIBRETRO_PARALLEL_N64_SUPP_OPT=FORCE_GLES=1 ARCH=arm
LIBRETRO_PARALLEL_N64_PLATFORM=rpi2
LIBRETRO_PARALLEL_N64_DYNAREC=arm
else ifeq ($(BR2_PACKAGE_RECALBOX_TARGET_XU4),y)
LIBRETRO_PARALLEL_N64_FIX_FLAGS=-DARM_FIX=1
LIBRETRO_PARALLEL_N64_SUPP_OPT=FORCE_GLES=1 ARCH=arm BOARD=ODROID-XU
LIBRETRO_PARALLEL_N64_PLATFORM=odroid
LIBRETRO_PARALLEL_N64_DYNAREC=arm
else ifeq ($(BR2_PACKAGE_RECALBOX_TARGET_C2),y)
LIBRETRO_PARALLEL_N64_SUPP_OPT=FORCE_GLES=1 ARCH=aarch64
LIBRETRO_PARALLEL_N64_PLATFORM=unix
LIBRETRO_PARALLEL_N64_DYNAREC=aarch64
else ifeq ($(BR2_i386),y)
LIBRETRO_PARALLEL_N64_SUPP_OPT=FORCE_GLES=1 ARCH=i686
LIBRETRO_PARALLEL_N64_PLATFORM=unix
LIBRETRO_PARALLEL_N64_DYNAREC=x86
LIBRETRO_PARALLEL_N64_CFLAGS = $(COMPILER_COMMONS_CFLAGS_NOLTO)
LIBRETRO_PARALLEL_N64_CXXFLAGS = $(COMPILER_COMMONS_CXXFLAGS_NOLTO)
LIBRETRO_PARALLEL_N64_LDFLAGS = $(COMPILER_COMMONS_LDFLAGS_NOLTO)
else ifeq ($(BR2_x86_64),y)
LIBRETRO_PARALLEL_N64_SUPP_OPT=FORCE_GLES=1 ARCH=x86_64
LIBRETRO_PARALLEL_N64_PLATFORM=unix
LIBRETRO_PARALLEL_N64_DYNAREC=x86_64
LIBRETRO_PARALLEL_N64_CFLAGS = $(COMPILER_COMMONS_CFLAGS_NOLTO)
LIBRETRO_PARALLEL_N64_CXXFLAGS = $(COMPILER_COMMONS_CXXFLAGS_NOLTO)
LIBRETRO_PARALLEL_N64_LDFLAGS = $(COMPILER_COMMONS_LDFLAGS_NOLTO)
else
LIBRETRO_PARALLEL_N64_PLATFORM=$(RETROARCH_LIBRETRO_PLATFORM)
endif

define LIBRETRO_PARALLEL_N64_BUILD_CMDS
	$(SED) "s|-O2|-O3|g" $(@D)/Makefile
	CFLAGS="$(TARGET_CFLAGS) $(LIBRETRO_PARALLEL_N64_CFLAGS) $(LIBRETRO_PARALLEL_N64_FIX_FLAGS)" \
		CXXFLAGS="$(TARGET_CXXFLAGS) $(LIBRETRO_PARALLEL_N64_CXXFLAGS) $(LIBRETRO_PARALLEL_N64_FIX_FLAGS)" \
		LDFLAGS="$(TARGET_LDFLAGS) $(LIBRETRO_PARALLEL_N64_LDFLAGS)"
		$(MAKE) CXX="$(TARGET_CXX)" CC="$(TARGET_CC)" -C $(@D)/ -f Makefile \
		platform="$(LIBRETRO_PARALLEL_N64_PLATFORM)" WITH_DYNAREC=$(LIBRETRO_PARALLEL_N64_DYNAREC) $(LIBRETRO_PARALLEL_N64_SUPP_OPT) \
		PLATCFLAGS="$(TARGET_CFLAGS) $(LIBRETRO_PARALLEL_N64_CFLAGS) $(LIBRETRO_PARALLEL_N64_FIX_FLAGS)"
endef

define LIBRETRO_PARALLEL_N64_INSTALL_TARGET_CMDS
	$(INSTALL) -D $(@D)/parallel_n64_libretro.so \
		$(TARGET_DIR)/usr/lib/libretro/parallel_n64_libretro.so
endef

$(eval $(generic-package))
