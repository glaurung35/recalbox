#!/bin/bash

declare -A ES_CONFIG=( \
    ["emulationstation.theme.recalbox-next.systemview"]="9-240p" \
    ["emulationstation.theme.recalbox-next.gamelistview"]="10-240p" \
    ["emulationstation.theme.recalbox-next.menuset"]="7-240p" \
    ["emulationstation.theme.recalbox-next.gameclipview"]="3-240p" \
    ["emulationstation.screensaver.type"]="demo" \
    ["240ptestsuite.ignore"]="0" \
    ["global.smooth"]="0" \
    )

declare -A ES_CLEAN_CONFIG=( \
    ["global.smooth"]="1" \
    ["240ptestsuite.ignore"]="1" \
    )

declare -A CONFIG_CONTENT=( \
    ["recalboxrgbdual"]="#device=recalboxrgbdual\ndtoverlay=recalboxrgbdual" \
    ["pi2scart"]="#device=pi2scart\ndtoverlay=recalboxrgbdual-thirdparty" \
    ["vga666"]="#device=vga666\ndtoverlay=recalboxrgbdual-thirdparty" \
    ["rgbpi"]="#device=rgbpi\ndtoverlay=recalboxrgbdual-thirdparty,mode6\naudio_pwm_mode=2\ndtoverlay=audremap,pins_18_19" \
    )
RGBDUAL_FORCE_HEADPHONE_CONTENT="#device=recalboxrgbdual\ndtoverlay=headphones"

RECALBOX_CONF="/recalbox/share/system/recalbox.conf"
CRT_OPTIONS_FILE="/boot/crt/recalbox-crt-options.cfg"
CRT_DAC_FILE="/boot/crt/recalbox-crt-config.txt"
TIMINGS_FILE="/boot/crt/timings.txt"
SWITCH_31KHZ_FILE="/sys/devices/platform/recalboxrgbdual/dipswitch-31khz/value"

RRGBDUAL_FILE="/sys/firmware/devicetree/base/hat/product"
RRGBDUAL_LASTBOOT="/boot/crt/.stamprrgbdual"
RRGBDUAL_31KHZ_LASTBOOT="/boot/crt/.stamprrgbdual31khz"

function configure_es {
    recallog -s "S13crt" -t "CRT" "Adding configuration in recalbox.conf"
    echo "" >> "${RECALBOX_CONF}"
    for KEY in "${!ES_CONFIG[@]}"; do
        if grep -q -e "^.\?${KEY}=.*" "${RECALBOX_CONF}"; then
            sed -i "s/^.\?${KEY}=.*/${KEY}=${ES_CONFIG[$KEY]}/g" \
                "${RECALBOX_CONF}"
        else
            echo "${KEY}=${ES_CONFIG[$KEY]}" >> "${RECALBOX_CONF}"
        fi
    done
}

function unconfigure {
    recallog -s "S13crt" -t "CRT" "Removing retroarch-custom.cfg and retroarch-core-options.cfg"
    rm -rf "/recalbox/share/system/configs/retroarch/retroarchcustom.cfg" "/recalbox/share/system/configs/retroarch/cores/retroarch-core-options.cfg"
    recallog -s "S13crt" -t "CRT" "Removing configuration in recalbox.conf"
    for KEY in "${!ES_CONFIG[@]}"; do
        sed -i "/${KEY}=${ES_CONFIG[$KEY]}/d" \
            "${RECALBOX_CONF}"
    done
    
    echo "" >> "${RECALBOX_CONF}"
    for KEY in "${!ES_CLEAN_CONFIG[@]}"; do
        if grep -q -e "${KEY}=.*" "${RECALBOX_CONF}"; then
            sed -i "s/${KEY}=.*/${KEY}=${ES_CLEAN_CONFIG[$KEY]}/g" \
            "${RECALBOX_CONF}"
        else
            echo "${KEY}=${ES_CLEAN_CONFIG[$KEY]}" >> "${RECALBOX_CONF}"
        fi
    done
}

function migrate {
    CONFIG_LINE=$(grep -m 1 -e "^system\.crt=.*" "${RECALBOX_CONF}")
    DAC=${CONFIG_LINE##*=}
    if [ "${DAC}" != "" ];then
        mount -o remount,rw /boot
        echo "adapter.type = ${DAC}" > ${CRT_OPTIONS_FILE}
        mount -o remount,ro /boot
        sed -i "/system\.crt=.*/d" "${RECALBOX_CONF}"
    fi
}

function migrateOldHorizontalOffset {
    CONFIG_LINE=$(grep -m 1 -e "^viewport\.width = [0-9]\+" "${CRT_OPTIONS_FILE}")
    [ $? != 0 ] && return
    WIDTH=${CONFIG_LINE##*"= "}
    if [ "${WIDTH}" -ge 1200 ];then
        NEWWIDTH=$((WIDTH - 1840))
        recallog -s "S13crt" -t "CRT" "Processing viewport.width migration from ${WIDTH} to ${NEWWIDTH}"
        mount -o remount,rw /boot
        sed -i "s/viewport\.width = .*/viewport.width = ${NEWWIDTH}/g" "${CRT_OPTIONS_FILE}"
        mount -o remount,ro /boot
    fi

    CONFIG_LINE=$(grep -m 1 -e "^mode\.offset\.horizontal = -\?[0-9]\+" "${CRT_OPTIONS_FILE}")
    [ $? != 0 ] && return
    OFFSET=${CONFIG_LINE##*"= "}
    if [ "${OFFSET}" -ge 30 ] || [ "${OFFSET}" -le -30 ];then
        NEWOFFSET=$((OFFSET / 6))
        recallog -s "S13crt" -t "CRT" "Processing offset migration from ${OFFSET} to ${NEWOFFSET}"
        mount -o remount,rw /boot
        sed -i "s/mode\.offset\.horizontal = .*/mode.offset.horizontal = ${NEWOFFSET}/g" "${CRT_OPTIONS_FILE}"
        mount -o remount,ro /boot
    fi
}

function rmTimings {
    mount -o remount,rw /boot
    rm -rf "${TIMINGS_FILE}"
    mount -o remount,ro /boot
}

if test "$1" == "start" ; then

    # To remove after 8.0.1
    migrate
    migrateOldHorizontalOffset
    rmTimings

    # RRGBD is present
    if grep -q "Recalbox RGB Dual" "${RRGBDUAL_FILE}"; then
        # Installation
        if [ ! -f "${RRGBDUAL_LASTBOOT}" ]; then
            recallog -s "S13crt" -t "CRT" "Processing Recalbox RGB Dual automatic installation."
            configure_es
            mount -o remount,rw /boot
            touch "${RRGBDUAL_LASTBOOT}"
            mount -o remount,ro /boot
            exit 0
        fi

        # RRGBD 31khz switch means we must force jack audio
        # Should be done at least one boot after the first boot (installation),
        # so the RRGBDUAL_LASTBOOT must be present
        # and RRGBDUAL_31KHZ_LASTBOOT should not be present
        if [ -f "${RRGBDUAL_LASTBOOT}" ] && \
            [ ! -f "${RRGBDUAL_31KHZ_LASTBOOT}" ] && \
            [ "$(cat ${SWITCH_31KHZ_FILE})" == "0" ]; then
            recallog -s "S13crt" -t "CRT" "Setting Recalbox RGB Dual jack sound as 31kHz dipswtich is ON."
            mount -o remount,rw /boot
            touch "${RRGBDUAL_31KHZ_LASTBOOT}"
            if ! grep -q "audio.forcejack" "${CRT_OPTIONS_FILE}";then
                echo -e "\naudio.forcejack = 1" >> "${CRT_OPTIONS_FILE}"
            fi
            mount -o remount,ro /boot
        fi

        # Jack have been set (from 31khz above or from ES)
        if grep -q "audio.forcejack = 1" "${CRT_OPTIONS_FILE}" && ! grep -q "dtoverlay=headphones" "${CRT_DAC_FILE}"; then
            mount -o remount,rw /boot
            recallog -s "S13crt" -t "CRT" "Forcing Recalbox RGB Dual jack sound."
            echo -e "${RGBDUAL_FORCE_HEADPHONE_CONTENT}" > ${CRT_DAC_FILE}
            mount -o remount,ro /boot
            reboot
            exit 0
        fi
        # Jack have been unset
        if ! grep -q "audio.forcejack = 1" "${CRT_OPTIONS_FILE}" && grep -q "dtoverlay=headphones" "${CRT_DAC_FILE}"; then
            mount -o remount,rw /boot
            recallog -s "S13crt" -t "CRT" "Unforcing Recalbox RGB Dual jack sound."
            rm "${CRT_DAC_FILE}"
            mount -o remount,ro /boot
            reboot
            exit 0
        fi

        # RRGBD specific 31khz uninstallation
        # Only if Recalbox rgb dual is present, and the 31khz has been modified, 
        # and the switch is back to state UP
        if [ -f "${RRGBDUAL_LASTBOOT}" ] && \
            [ -f "${RRGBDUAL_31KHZ_LASTBOOT}" ] && \
            [ "$(cat $SWITCH_31KHZ_FILE)" == "1" ]; then
            recallog -s "S13crt" -t "CRT" "Processing Recalbox RGB Dual 31kHz automatic uninstallation."
            mount -o remount,rw /boot
            rm "${RRGBDUAL_31KHZ_LASTBOOT}"
            sed -i "/audio\.forcejack = 1/d" "${CRT_OPTIONS_FILE}"
            rm ${CRT_DAC_FILE}
            mount -o remount,ro /boot
            reboot
            exit 0
        fi
        exit 0
    # End RRGBD
    fi

    # RRGBD uninstallation
    if ! grep -q "Recalbox RGB Dual" "${RRGBDUAL_FILE}" && [ -f "${RRGBDUAL_LASTBOOT}" ]; then
        recallog -s "S13crt" -t "CRT" "Processing Recalbox RGB Dual automatic uninstallation."
        unconfigure
        mount -o remount,rw /boot
        rm "${RRGBDUAL_LASTBOOT}"
        rm "${CRT_DAC_FILE}"
        mount -o remount,ro /boot
        exit 0
    fi
    # Other dacs
    CONFIG_LINE=$(grep -m 1 -e "^adapter\.type = .*" "${CRT_OPTIONS_FILE}")
    DAC=${CONFIG_LINE##*"= "}

    if [[ "${DAC}" == "recalboxrgbdual" || "${DAC}" == "vga666" || "${DAC}" == "rgbpi" || "${DAC}" == "pi2scart" ]];then
        if [[ ! -f "${CRT_DAC_FILE}" ]] || ! grep -q "#device=${DAC}" "${CRT_DAC_FILE}"; then
            source /recalbox/scripts/recalbox-utils.sh
            recallog -s "S13crt" -t "CRT" "Processing ${DAC} configuration."
            mount -o remount,rw /boot

            recallog -s "S13crt" -t "CRT" "Installing config in /boot/crt/"
            echo -e "${CONFIG_CONTENT[$DAC]}" > ${CRT_DAC_FILE}
            mount -o remount,ro /boot
            configure_es
            reboot
        fi
    elif [[ "${DAC}" == "" ]]; then
        if [[ -f "${CRT_DAC_FILE}" ]] && grep -q "#device=" "${CRT_DAC_FILE}"; then
            # We should clean
            source /recalbox/scripts/recalbox-utils.sh
            recallog -s "S13crt" -t "CRT" "Uninstalling CRT configuration."
            mount -o remount,rw /boot
            rm "${CRT_DAC_FILE}"
            touch "${CRT_DAC_FILE}"
           
            unconfigure

            mount -o remount,ro /boot
            reboot
        fi
    else
        # Unsupported
        source /recalbox/scripts/recalbox-utils.sh
        recallog -s "S13crt" -t "CRT" "Unable to process ${DAC} configuration. Not supported yet."
    fi
fi