#pragma once

#include <map>

namespace PlatformIds
{
	enum PlatformId : unsigned int
	{
		PLATFORM_UNKNOWN = 0,

		AMSTRAD_CPC,
		APPLE_II,
		APPLE_MACOS,
		ARCADE,
		ATARI_8BITS,
		ATARI_2600,
		ATARI_5200,
		ATARI_7800,
		ATARI_LYNX,
		ATARI_ST, // Atari ST/STE/Falcon
		ATARI_JAGUAR,
		ATARI_JAGUAR_CD,
		BANDAI_WONDERSWAN,
		BANDAI_WONDERSWAN_COLOR,
		COLECOVISION,
		COMMODORE_64,
		COMMODORE_AMIGA,
		FAIRCHILD_CHANNELF,
		GAMEENGINE_DAPHNE,
		GAMEENGINE_LUTRO,
		GAMEENGINE_OPENBOR,
		GAMEENGINE_SCUMMVM,
		GCE_VECTREX,
		IBM_PC,
		MAGNAVOX_ODYSSEY2,
		MATTEL_INTELLIVISION,
		MGT_SAMCOUPE,
		MICROSOFT_XBOX,
		MICROSOFT_XBOX_360,
		MICROSOFT_MSX,
		MICROSOFT_MSX1,
		MICROSOFT_MSX2,
		NEC_PCENGINE,
		NEC_PCENGINE_CD,
		NEC_SUPERGRAFX,
		NEOGEO,
    NEOGEO_CD,
		NEOGEO_POCKET,
		NEOGEO_POCKET_COLOR,
		NINTENDO_3DS,
		NINTENDO_64,
		NINTENDO_DS,
		NINTENDO_FDS,
		NINTENDO_GAME_AND_WATCH,
		NINTENDO_GAMEBOY,
		NINTENDO_GAMEBOY_ADVANCE,
		NINTENDO_GAMEBOY_COLOR,
		NINTENDO_GAMECUBE,
		NINTENDO_NES,
		NINTENDO_POKEMINI,
		NINTENDO_SATELLAVIEW,
		NINTENDO_SNES,
		NINTENDO_SUFAMITURBO,
		NINTENDO_VIRTUAL_BOY,
		NINTENDO_WII,
		NINTENDO_WII_U,
		OSH_UZEBOX,
		PANASONIC_3DO,
		PORT_PRBOOM,
		PORT_CAVE_STORY,
		SEGA_32X,
		SEGA_CD,
		SEGA_DREAMCAST,
		SEGA_GAME_GEAR,
		SEGA_GENESIS,
		SEGA_MASTER_SYSTEM,
		SEGA_MEGA_DRIVE,
		SEGA_SATURN,
		SEGA_SG1000,
		SHARP_X68000,
		SONY_PLAYSTATION,
		SONY_PLAYSTATION_2,
		SONY_PLAYSTATION_3,
		SONY_PLAYSTATION_4,
		SONY_PLAYSTATION_VITA,
		SONY_PLAYSTATION_PORTABLE,
		SINCLAIR_ZX_SPECTRUM,
		SINCLAIR_ZX_81,
		STREAM_MOONLIGHT,
		TANDERINE_ORICATMOS,
		THOMSON_MOTO,

		PLATFORM_IGNORE, // do not allow scraping for this system
		PLATFORM_COUNT
	};

	PlatformId getPlatformId(const char* str);
	const char* getPlatformName(PlatformId id);

	const char* getCleanMameName(const char* from);
}
